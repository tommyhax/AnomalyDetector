name: Deploy Application - AI Service

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/deploy-aiService.yaml"
      - "aiService/**"
  workflow_dispatch:
  workflow_call:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      CLIENT_ID: ${{ secrets.AUTHSETTINGS_CLIENTSETTINGS_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.AUTHSETTINGS_CLIENTSETTINGS_CLIENT_SECRET }}
      API_GATEWAY_URL: ${{ secrets.AZURE_APIGATEWAY_URL }}
      EVENTHUB_CONNECTIONSTRING: ${{ secrets.EVENTHUBSETTINGS_CONNECTIONSTRING }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python in GitHub Actions
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Load parameters.env into environment
        run: |
          cat .github/workflows/parameters.env >> $GITHUB_ENV

      - name: Create and start virtual environment and install dependencies
        working-directory: aiService
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
        
      - name: Archive Production Artifacts
        working-directory: aiService
        run: |
          cp requirements.txt ../
          zip -r ../ai_service.zip .

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Python Runtime in Azure
        run: |
          az webapp config set --resource-group rg-anomalydetector --name $AI_SERVICE_NAME --linux-fx-version "PYTHON|3.13"

      - name: Set Azure Environment Variables
        run: |
          az webapp config appsettings set --resource-group rg-anomalydetector --name $AI_SERVICE_NAME \
            --settings CLIENT_ID=$CLIENT_ID \
                       CLIENT_SECRET=$CLIENT_SECRET \
                       API_GATEWAY_URL=$API_GATEWAY_URL \
                       EVENTHUB_CONNECTIONSTRING=$EVENTHUB_CONNECTIONSTRING

      - name: Set Startup Command in Azure
        run: |
          az webapp config set --resource-group rg-anomalydetector --name $AI_SERVICE_NAME \
            --startup-file "pip install -r requirements.txt && gunicorn -w 4 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:8000"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AI_SERVICE_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_AISERVICE }}
          package: ai_service.zip

      - name: Verify AI Service is Running
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://$AI_SERVICE_NAME.azurewebsites.net/health)
          if [[ "$response" -ne 200 ]]; then
            echo "AI Service is not responding with HTTP 200. Deployment failed."
            exit 1
          fi
